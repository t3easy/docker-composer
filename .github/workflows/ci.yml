name: Build and push Docker images

on:
  schedule:
  - cron: '42 4 * * *'
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        alpine: ["3.15", "3.14"]
        composer: ["2", "1"]
        php: ["8.1", "8.0", "7.4"]
        include:
        - alpine: "3.14"
          composer: "2"
          php: "7.3"
        - alpine: "3.14"
          composer: "1"
          php: "7.3"
        - alpine: "3.12"
          composer: "2"
          php: "7.2"
        - alpine: "3.12"
          composer: "1"
          php: "7.2"
    env:
      LATEST_COMPOSER: "2"
      LATEST_PHP: "7.4"
      IMAGE_NAME: t3easy/composer
      PLATFORMS: linux/amd64,linux/arm64

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: github.event_name != 'pull_request'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      if: github.event_name != 'pull_request'
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push latest image
      uses: docker/build-push-action@v2
      if: ${{ matrix.composer == env.LATEST_COMPOSER && matrix.php == env.LATEST_PHP }}
      with:
        push: ${{ github.event_name != 'pull_request' }}
        platforms: ${{ env.PLATFORMS }}
        build-args: |
          ALPINE_VERSION=${{ matrix.alpine }}
          COMPOSER_VERSION=${{ matrix.composer }}
          PHP_VERSION=${{ matrix.php }}
        tags: |
          ${{ env.IMAGE_NAME }}
          ghcr.io/${{ env.IMAGE_NAME }}
          ${{ env.IMAGE_NAME }}:${{ matrix.composer }}-php${{ matrix.php }}-alpine${{ matrix.alpine }}
          ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.composer }}-php${{ matrix.php }}-alpine${{ matrix.alpine }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Build and push production images
      uses: docker/build-push-action@v2
      if: ${{ matrix.composer != env.LATEST_COMPOSER || matrix.php != env.LATEST_PHP }}
      with:
        push: ${{ github.event_name != 'pull_request' }}
        platforms: ${{ env.PLATFORMS }}
        build-args: |
          ALPINE_VERSION=${{ matrix.alpine }}
          COMPOSER_VERSION=${{ matrix.composer }}
          PHP_VERSION=${{ matrix.php }}
        tags: |
          ${{ env.IMAGE_NAME }}:${{ matrix.composer }}-php${{ matrix.php }}-alpine${{ matrix.alpine }}
          ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.composer }}-php${{ matrix.php }}-alpine${{ matrix.alpine }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache